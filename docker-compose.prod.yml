# ====================================
# Docker Compose for Production
# ====================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tripook-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-tripook_prod_db}
      POSTGRES_USER: ${DATABASE_USER:-tripook_prod_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./database/backup:/backup
    networks:
      - tripook-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-tripook_prod_user} -d ${DATABASE_NAME:-tripook_prod_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./tripook-backend
      dockerfile: Dockerfile
    container_name: tripook-backend-prod
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/${DATABASE_NAME:-tripook_prod_db}
      DATABASE_USERNAME: ${DATABASE_USER:-tripook_prod_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JAVA_OPTS: "-Xmx2g -Xms1g -XX:+UseG1GC"
      SERVER_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tripook-prod-network
    volumes:
      - backend_prod_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend with Nginx
  frontend:
    build:
      context: ./tripook-frontend
      dockerfile: Dockerfile
    container_name: tripook-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - tripook-prod-network
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Nginx Reverse Proxy (Optional - for load balancing)
  nginx-proxy:
    image: nginx:alpine
    container_name: tripook-nginx-proxy
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - tripook-prod-network

# Volumes
volumes:
  postgres_prod_data:
    driver: local
  backend_prod_logs:
    driver: local
  nginx_logs:
    driver: local

# Networks
networks:
  tripook-prod-network:
    driver: bridge